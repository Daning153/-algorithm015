class IsAnagram {
    public boolean isAnagram(String s, String t) {
        if(s.length() != t.length()) return false;
        int[] count = new int[26];
        for(int i=0; i<s.length(); ++i){
            count[s.charAt(i) - 'a']++;
        }
        for(int j=0;j<t.length(); ++j){
            count[t.charAt(j) - 'a']--;
            if(count[t.charAt(j) - 'a'] < 0){
                return false;
            }
        }
        return true;
    }
}
// public boolean isAnagram(String s, String t) {
//         if(s.length() != t.length()) return false;
//         char[] str1 = s.toCharArray();
//         char[] str2 = t.toCharArray();
//         Arrays.sort(str1);
//         Arrays.sort(str2);
//         return Arrays.equals(str1, str2);
//     }

// public boolean isAnagram(String s, String t) {
//         if(s.length() != t.length()) return false;
//         int[] count = new int[26];
//         for(int i=0;i<s.length();++i){
//             //count[0]~count[26]的每一个值都为0，则表示完全匹配，若不为0说明有的没匹配上
//             count[s.charAt(i) - 'a']++;
//             count[t.charAt(i) - 'a']--;
//         }
//         for (int word : count
//              ) {
//             if(word != 0){
//                 return false;
//             }
//         }
//         return true;
//     }